/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package final_pbo;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;

/**
 *
 * @author Bambang Sumadi
 */
public class inputSkripsi extends javax.swing.JFrame {

    /**
     * Creates new form inputSkripsi
     */
    public inputSkripsi() {
        initComponents();
        Tampilan();
    }
    
    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<Skripsi> Skripsi;
    
    private void kosongkan_form() {
        isiID1.setEditable(true);
        isiID1.setText(null);
        isiNama1.setText(null);
        isiAngkatan1.setText(null);
        isiIDSkripsi.setText(null);
        isiJudul1.setText(null);
        isiTahun1.setText(null);
        isiJumlah1.setText(null);
        isiTgl1.setText(null);
    }
    
    private void updateTable() {
        EntityManager entityManager = Persistence.createEntityManagerFactory("final_pboPU").createEntityManager();
        entityManager.getTransaction().begin();
        TypedQuery<Skripsi> querySelectAll = entityManager.createNamedQuery("Skripsi.findAll", Skripsi.class);
        List<Skripsi> results = querySelectAll.getResultList();
        // ... (kode untuk mendapatkan data dari database)
        DefaultTableModel newModel = new DefaultTableModel();
        newModel.addColumn("ID");
        newModel.addColumn("Name");
        newModel.addColumn("Gen");
        newModel.addColumn("ID Skripsi");
        newModel.addColumn("Title");
        newModel.addColumn("Public year");
        newModel.addColumn("NoP");
        newModel.addColumn("Date");
        
        for (Skripsi data : Skripsi) {
            Object[] rowData = {
                data.getId(),
                data.getNama(),
                data.getAngkatan(),
                data.getIdSkripsi(),
                data.getJudulSkripsi(),
                data.getTahunTerbit(),
                data.getJumlahHalaman(),
                data.getTanggal()};
            newModel.addRow(rowData);
        }
    }
    
    private void Tampilan() {
//        Skripsi.clear();
        EntityManager entityManager = Persistence.createEntityManagerFactory("final_pboPU").createEntityManager();
        entityManager.getTransaction().begin();
        TypedQuery<Skripsi> querySelectAll = entityManager.createNamedQuery("Skripsi.findAll", Skripsi.class);
        Query query = entityManager.createQuery("SELECT s FROM Skripsi s");
        List<Skripsi> results = query.getResultList();
        entityManager.getTransaction().commit();
        entityManager.close();
        
        DefaultTableModel model = (DefaultTableModel) TableModel.getModel();
        model.setRowCount(0);
        for (Skripsi data : results) {
            Object[] baris = new Object[8];
            baris[0] = data.getId();
            baris[1] = data.getNama();
            baris[2] = data.getAngkatan();
            baris[3] = data.getIdSkripsi();
            baris[4] = data.getJudulSkripsi();
            baris[5] = data.getTahunTerbit();
            baris[6] = data.getJumlahHalaman();
            baris[7] = data.getTanggal();
            model.addRow(baris);
        }
        TableModel.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAtas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        panelKiri = new javax.swing.JPanel();
        jHome = new javax.swing.JButton();
        jBuku = new javax.swing.JButton();
        jSkripsi = new javax.swing.JButton();
        jSearch = new javax.swing.JButton();
        jKeluar = new javax.swing.JButton();
        panelTengah = new javax.swing.JPanel();
        panelSkripsi = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        isiID1 = new javax.swing.JTextField();
        isiNama1 = new javax.swing.JTextField();
        isiAngkatan1 = new javax.swing.JTextField();
        isiIDSkripsi = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        isiJudul1 = new javax.swing.JTextField();
        isiTahun1 = new javax.swing.JTextField();
        isiJumlah1 = new javax.swing.JTextField();
        isiTgl1 = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        input = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        cSearch1 = new javax.swing.JComboBox<>();
        jSearch1 = new javax.swing.JTextField();
        print = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableModel = new javax.swing.JTable();
        peminjamanSkripsi = new javax.swing.JButton();
        panelAtas1 = new javax.swing.JPanel();

        panelAtas.setBackground(new java.awt.Color(41, 134, 204));

        javax.swing.GroupLayout panelAtasLayout = new javax.swing.GroupLayout(panelAtas);
        panelAtas.setLayout(panelAtasLayout);
        panelAtasLayout.setHorizontalGroup(
            panelAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelAtasLayout.setVerticalGroup(
            panelAtasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(248, 243, 230));
        mainPanel.setPreferredSize(new java.awt.Dimension(600, 520));

        panelKiri.setBackground(new java.awt.Color(248, 243, 230));

        jHome.setBackground(new java.awt.Color(248, 243, 230));
        jHome.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Downloads\\primary (1).png")); // NOI18N
        jHome.setBorder(null);
        jHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHomeActionPerformed(evt);
            }
        });

        jBuku.setBackground(new java.awt.Color(248, 243, 230));
        jBuku.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Downloads\\Vector.png")); // NOI18N
        jBuku.setBorder(null);
        jBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBukuActionPerformed(evt);
            }
        });

        jSkripsi.setBackground(new java.awt.Color(248, 243, 230));
        jSkripsi.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Downloads\\Vector (1).png")); // NOI18N
        jSkripsi.setBorder(null);
        jSkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSkripsiActionPerformed(evt);
            }
        });

        jSearch.setBackground(new java.awt.Color(248, 243, 230));
        jSearch.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Downloads\\Vector (3).png")); // NOI18N
        jSearch.setBorder(null);
        jSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchActionPerformed(evt);
            }
        });

        jKeluar.setBackground(new java.awt.Color(248, 243, 230));
        jKeluar.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Downloads\\Vector (2).png")); // NOI18N
        jKeluar.setBorder(null);

        javax.swing.GroupLayout panelKiriLayout = new javax.swing.GroupLayout(panelKiri);
        panelKiri.setLayout(panelKiriLayout);
        panelKiriLayout.setHorizontalGroup(
            panelKiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKiriLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(panelKiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSkripsi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBuku, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jKeluar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelKiriLayout.setVerticalGroup(
            panelKiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKiriLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jHome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 362, Short.MAX_VALUE)
                .addComponent(jKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        panelTengah.setBackground(new java.awt.Color(150, 213, 242));
        panelTengah.setLayout(new java.awt.CardLayout());

        panelSkripsi.setBackground(new java.awt.Color(150, 213, 242));

        jLabel3.setBackground(new java.awt.Color(41, 134, 204));
        jLabel3.setFont(new java.awt.Font("Helvetica Rounded", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(5, 37, 132));
        jLabel3.setText("Skripsi");

        jPanel3.setBackground(new java.awt.Color(41, 134, 204));
        jPanel3.setPreferredSize(new java.awt.Dimension(200, 4));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );

        jLabel23.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 51, 51));
        jLabel23.setText("ID");

        jLabel24.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 51, 51));
        jLabel24.setText("Name");

        jLabel25.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 51, 51));
        jLabel25.setText("Gen");

        jLabel26.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 51, 51));
        jLabel26.setText("ID Skripsi");

        jLabel27.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 51, 51));
        jLabel27.setText("Title");

        isiID1.setBackground(new java.awt.Color(246, 246, 246));
        isiID1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiID1.setForeground(new java.awt.Color(0, 51, 51));

        isiNama1.setBackground(new java.awt.Color(246, 246, 246));
        isiNama1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiNama1.setForeground(new java.awt.Color(0, 51, 51));

        isiAngkatan1.setBackground(new java.awt.Color(246, 246, 246));
        isiAngkatan1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiAngkatan1.setForeground(new java.awt.Color(0, 51, 51));

        isiIDSkripsi.setBackground(new java.awt.Color(246, 246, 246));
        isiIDSkripsi.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiIDSkripsi.setForeground(new java.awt.Color(0, 51, 51));

        jLabel28.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 51, 51));
        jLabel28.setText("Public year");

        jLabel29.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 51, 51));
        jLabel29.setText("PoN");

        jLabel30.setFont(new java.awt.Font("Helvetica Rounded", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 51, 51));
        jLabel30.setText("Date");

        isiJudul1.setBackground(new java.awt.Color(246, 246, 246));
        isiJudul1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiJudul1.setForeground(new java.awt.Color(0, 51, 51));

        isiTahun1.setBackground(new java.awt.Color(246, 246, 246));
        isiTahun1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiTahun1.setForeground(new java.awt.Color(0, 51, 51));

        isiJumlah1.setBackground(new java.awt.Color(246, 246, 246));
        isiJumlah1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiJumlah1.setForeground(new java.awt.Color(0, 51, 51));

        isiTgl1.setBackground(new java.awt.Color(246, 246, 246));
        isiTgl1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        isiTgl1.setForeground(new java.awt.Color(0, 51, 51));

        save.setBackground(new java.awt.Color(41, 134, 204));
        save.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(41, 134, 204));
        update.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Edit");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        input.setBackground(new java.awt.Color(41, 134, 204));
        input.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        input.setForeground(new java.awt.Color(255, 255, 255));
        input.setText("Input");
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(41, 134, 204));
        delete.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        cSearch1.setBackground(new java.awt.Color(246, 246, 246));
        cSearch1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        cSearch1.setForeground(new java.awt.Color(0, 51, 51));
        cSearch1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Gen", "ID Skripsi", "Title", "Public year", "PoN", "Date" }));
        cSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSearch1ActionPerformed(evt);
            }
        });

        jSearch1.setBackground(new java.awt.Color(246, 246, 246));
        jSearch1.setFont(new java.awt.Font("Helvetica Rounded", 1, 16)); // NOI18N
        jSearch1.setForeground(new java.awt.Color(0, 51, 51));
        jSearch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSearch1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jSearch1KeyReleased(evt);
            }
        });

        print.setBackground(new java.awt.Color(41, 134, 204));
        print.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Downloads\\Page-1.png")); // NOI18N
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        TableModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gen", "ID Skripsi", "Title", "Public year", "PoN", "Date"
            }
        ));
        TableModel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableModelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableModel);

        peminjamanSkripsi.setBackground(new java.awt.Color(248, 243, 230));
        peminjamanSkripsi.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        peminjamanSkripsi.setForeground(new java.awt.Color(255, 255, 255));
        peminjamanSkripsi.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Downloads\\Vector (1).png")); // NOI18N
        peminjamanSkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peminjamanSkripsiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSkripsiLayout = new javax.swing.GroupLayout(panelSkripsi);
        panelSkripsi.setLayout(panelSkripsiLayout);
        panelSkripsiLayout.setHorizontalGroup(
            panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSkripsiLayout.createSequentialGroup()
                .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSkripsiLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelSkripsiLayout.createSequentialGroup()
                                .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelSkripsiLayout.createSequentialGroup()
                                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelSkripsiLayout.createSequentialGroup()
                                                .addComponent(jLabel25)
                                                .addGap(69, 69, 69))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSkripsiLayout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addGap(18, 18, 18)))
                                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(isiAngkatan1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                            .addComponent(isiIDSkripsi)))
                                    .addGroup(panelSkripsiLayout.createSequentialGroup()
                                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel24)
                                            .addComponent(jLabel23))
                                        .addGap(53, 53, 53)
                                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(isiID1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                            .addComponent(isiNama1))))
                                .addGap(18, 18, 18)
                                .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelSkripsiLayout.createSequentialGroup()
                                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel30)
                                            .addComponent(jLabel29)
                                            .addComponent(jLabel27))
                                        .addGap(58, 58, 58))))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSkripsiLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(peminjamanSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(delete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelSkripsiLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(isiJumlah1)
                                    .addComponent(isiTgl1)
                                    .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(isiJudul1)
                                        .addComponent(isiTahun1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))))
                    .addGroup(panelSkripsiLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        panelSkripsiLayout.setVerticalGroup(
            panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSkripsiLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addGap(8, 8, 8)
                .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSkripsiLayout.createSequentialGroup()
                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelSkripsiLayout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSkripsiLayout.createSequentialGroup()
                                .addComponent(peminjamanSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)))
                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(isiID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isiJudul1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(isiNama1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isiTahun1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)))
                    .addGroup(panelSkripsiLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelSkripsiLayout.createSequentialGroup()
                            .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(isiAngkatan1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(isiJumlah1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel29))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panelSkripsiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(isiIDSkripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(isiTgl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26)
                                .addComponent(jLabel30)))
                        .addGroup(panelSkripsiLayout.createSequentialGroup()
                            .addComponent(cSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(print, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        panelTengah.add(panelSkripsi, "card4");

        panelAtas1.setBackground(new java.awt.Color(41, 134, 204));

        javax.swing.GroupLayout panelAtas1Layout = new javax.swing.GroupLayout(panelAtas1);
        panelAtas1.setLayout(panelAtas1Layout);
        panelAtas1Layout.setHorizontalGroup(
            panelAtas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelAtas1Layout.setVerticalGroup(
            panelAtas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(panelKiri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTengah, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(panelAtas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(panelAtas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelKiri, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(panelTengah, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1295, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHomeActionPerformed
        new home().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jHomeActionPerformed

    private void jBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBukuActionPerformed
        new inputBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBukuActionPerformed

    private void jSkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSkripsiActionPerformed
        new inputSkripsi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jSkripsiActionPerformed

    private void jSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchActionPerformed
        new search().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jSearchActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String id = isiID1.getText();
        String nama = isiNama1.getText();
        String angkatan = isiAngkatan1.getText();
        String idSkripsi = isiIDSkripsi.getText();
        String judulSkripsi = isiJudul1.getText();
        String tahunTerbit = isiTahun1.getText();
        String jumlahHalaman = isiJumlah1.getText();
        String tanggal = isiTgl1.getText();
        try {
            SimpleDateFormat tgl = new SimpleDateFormat("dd-MM-yyyy");
            EntityManager entityManager = Persistence.createEntityManagerFactory("final_pboPU").createEntityManager();
            entityManager.getTransaction().begin();
            Skripsi s = new Skripsi();
            s.setId(id);
            s.setNama(nama);
            s.setAngkatan(angkatan);
            s.setIdSkripsi(idSkripsi);
            s.setJudulSkripsi(judulSkripsi);
            s.setTahunTerbit(tahunTerbit);
            s.setJumlahHalaman(jumlahHalaman);
            s.setTanggal(tgl.parse(tanggal));
            entityManager.persist(s);
            entityManager.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Data saved successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Kosongkan form setelah simpan
            kosongkan_form();
            Tampilan();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Data failed to save" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        isiID1.setText(null);
        isiNama1.setText(null);
        isiAngkatan1.setText(null);
        isiIDSkripsi.setText(null);
        isiJudul1.setText(null);
        isiTahun1.setText(null);
        isiJumlah1.setText(null);
        isiTgl1.setText(null);
    }//GEN-LAST:event_saveActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String id = isiID1.getText();
        String nama = isiNama1.getText();
        String angkatan = isiAngkatan1.getText();
        String idSkripsi = isiIDSkripsi.getText();
        String judulSkripsi = isiJudul1.getText();
        String tahunTerbit = isiTahun1.getText();
        String jumlahHalaman = isiJumlah1.getText();
        String tanggal = isiTgl1.getText();
        try {
            SimpleDateFormat tgl = new SimpleDateFormat("dd-MM-yyyy");
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("final_pboPU");
            EntityManager em = emf.createEntityManager();
            Skripsi s = new Skripsi();
            s.setId(id);
            s.setNama(nama);
            s.setAngkatan(angkatan);
            s.setIdSkripsi(idSkripsi);
            s.setJudulSkripsi(judulSkripsi);
            s.setTahunTerbit(tahunTerbit);
            s.setJumlahHalaman(jumlahHalaman);
            s.setTanggal(tgl.parse(tanggal));
            em.getTransaction().begin();
            em.merge(s);
            em.getTransaction().commit();
            JOptionPane.showMessageDialog(null, "Data updated successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Perbarui tabel
            Tampilan();
            kosongkan_form();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Data failed to update" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        isiID1.setText(null);
        isiNama1.setText(null);
        isiAngkatan1.setText(null);
        isiIDSkripsi.setText(null);
        isiJudul1.setText(null);
        isiTahun1.setText(null);
        isiJumlah1.setText(null);
        isiTgl1.setText(null);
    }//GEN-LAST:event_updateActionPerformed

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed
        JFileChooser filechooser = new JFileChooser();
        int i = filechooser.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION) {
            EntityManager entityManager = Persistence.createEntityManagerFactory("final_pboPU").createEntityManager();
            entityManager.getTransaction().begin();
            File f = filechooser.getSelectedFile();
            String filepath = f.getPath();
            //Parsing CSV Data
            try {
                SimpleDateFormat tgl = new SimpleDateFormat("dd-MM-yyyy");
                InputStreamReader inputStreamReader = new InputStreamReader(new FileInputStream(filepath));
                org.apache.commons.csv.CSVParser csvParser = CSVFormat.DEFAULT.parse(inputStreamReader);
                for (CSVRecord csvRecord : csvParser) {
                    Skripsi s = new Skripsi();
                    s.setId(csvRecord.get(0));
                    s.setNama(csvRecord.get(1));
                    s.setAngkatan(csvRecord.get(2));
                    s.setIdSkripsi(csvRecord.get(3));
                    s.setJudulSkripsi(csvRecord.get(4));
                    s.setTahunTerbit(csvRecord.get(5));
                    s.setJumlahHalaman(csvRecord.get(6));
                    s.setTanggal(tgl.parse(csvRecord.get(7)));
                    entityManager.persist(s);
                }
                Tampilan();
                kosongkan_form();
                updateTable();
            } catch (IOException ex) {
                System.out.println("Error in Parsing CSV File");
            } catch (ParseException ex) {
                Logger.getLogger(inputBuku.class.getName()).log(Level.SEVERE, null, ex);
            }
            entityManager.getTransaction().commit();
        }
    }//GEN-LAST:event_inputActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        String idSkripsi = isiIDSkripsi.getText().trim();
        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("final_pboPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();
            
            Skripsi s = em.find(Skripsi.class, idSkripsi);
            if (s != null) {
                em.remove(s);
            }
            em.flush();
            em.getTransaction().commit();
                        
            JOptionPane.showMessageDialog(null, "Data deleted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Data failed to delete" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        isiID1.setText(null);
        isiIDSkripsi.setText(null);
        isiNama1.setText(null);
        isiAngkatan1.setText(null);
        isiIDSkripsi.setText(null);
        isiJudul1.setText(null);
        isiTahun1.setText(null);
        isiJumlah1.setText(null);
        isiTgl1.setText(null);
        Tampilan();
        updateTable();
    }//GEN-LAST:event_deleteActionPerformed

    private void peminjamanSkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peminjamanSkripsiActionPerformed
        new pinjamSkripsi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_peminjamanSkripsiActionPerformed

    private void TableModelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableModelMouseClicked
        int baris = TableModel.rowAtPoint(evt.getPoint());
        String id = TableModel.getValueAt(baris, 0).toString();
        isiID1.setText(id);
        
        String nama = TableModel.getValueAt(baris, 1).toString();
        isiNama1.setText(nama);
        
        String angkatan = TableModel.getValueAt(baris, 2).toString();
        isiAngkatan1.setText(angkatan);
        
        String idSkripsi = TableModel.getValueAt(baris, 3).toString();
        isiIDSkripsi.setText(idSkripsi);
        
        String judulSkripsi = TableModel.getValueAt(baris, 4).toString();
        isiJudul1.setText(judulSkripsi);
        
        String tahunTerbit = TableModel.getValueAt(baris, 5).toString();
        isiTahun1.setText(tahunTerbit);
        
        String jumlahHalaman = TableModel.getValueAt(baris, 6).toString();
        isiJumlah1.setText(jumlahHalaman);
        
        String tanggal = TableModel.getValueAt(baris, 7).toString();
        isiTgl1.setText(tanggal);
    }//GEN-LAST:event_TableModelMouseClicked

    private void jSearch1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearch1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearch1KeyPressed

    private void jSearch1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearch1KeyReleased
        try {
            String selection = (String) cSearch1.getSelectedItem();
            String searchTerm = jSearch1.getText().trim().toLowerCase();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT s FROM Skripsi s WHERE ";
            
            switch (selection.toLowerCase()) {
                case "id":
                    queryString += "LOWER(s.id) LIKE LOWER(:searchTerm)";
                    break;
                case "name":
                    queryString += "LOWER(s.nama) LIKE LOWER(:searchTerm)";
                    break;
                case "gen":
                    queryString += "LOWER(s.angkatan) LIKE LOWER(:searchTerm)";
                    break;
                case "id skripsi":
                    queryString += "LOWER(s.idSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "title":
                    queryString += "LOWER(s.judulSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "public year":
                    queryString += "LOWER(s.tahunTerbit) LIKE LOWER(:searchTerm)";
                    break;
                case "nop":
                    queryString += "LOWER(s.jumlahHalaman) LIKE LOWER(:searchTerm)";
                    break;
                case "date":
                    queryString += "LOWER(s.tanggal) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            // Create and execute the JPA query
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("final_pboPU");
            EntityManager em = emf.createEntityManager();
            
            TypedQuery<Skripsi> query = em.createQuery(queryString, Skripsi.class);
            query.setParameter("searchTerm", "%" + searchTerm + "%");
            
            List<Skripsi> results = query.getResultList();
            
            DefaultTableModel dataModel = new DefaultTableModel();

            // Add columns to the model
            dataModel.addColumn("ID");
            dataModel.addColumn("Name");
            dataModel.addColumn("Gen");
            dataModel.addColumn("ID Skripsi");
            dataModel.addColumn("Title");
            dataModel.addColumn("Public year");
            dataModel.addColumn("NoP");
            dataModel.addColumn("Date");
            // ... tambahkan kolom lain sesuai kebutuhan
            // Add rows to the model
            for (Skripsi result : results) {
                Object[] rowData = {
                    result.getId(),
                    result.getNama(),
                    result.getAngkatan(),
                    result.getIdSkripsi(),
                    result.getJudulSkripsi(),
                    result.getTahunTerbit(),
                    result.getJumlahHalaman(),
                    result.getTanggal()};
                dataModel.addRow(rowData);
            }
            // Set jTableBuku with the created model
            TableModel.setModel(dataModel);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jSearch1KeyReleased

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            String reportPath = "src/final_pbo/cetakSkripsi.jrxml";
            String selection = ((String) cSearch1.getSelectedItem()).toLowerCase();
            String searchTerm = jSearch1.getText().trim();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT s FROM Skripsi s WHERE ";
            
            switch (selection.toLowerCase()) {
                case "id":
                    queryString += "LOWER(s.id) LIKE LOWER(:searchTerm)";
                    break;
                case "name":
                    queryString += "LOWER(s.nama) LIKE LOWER(:searchTerm)";
                    break;
                case "gen":
                    queryString += "LOWER(s.angkatan) LIKE LOWER(:searchTerm)";
                    break;
                case "id skripsi":
                    queryString += "LOWER(s.idSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "title":
                    queryString += "LOWER(s.judulSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "public year":
                    queryString += "LOWER(s.tahunTerbit) LIKE LOWER(:searchTerm)";
                    break;
                case "nop":
                    queryString += "LOWER(s.jumlahHalaman) LIKE LOWER(:searchTerm)";
                    break;
                case "date":
                    queryString += "LOWER(s.tanggal) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }
            
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("final_pboPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();
            
            CriteriaBuilder cb = em.getCriteriaBuilder();
            CriteriaQuery<Skripsi> cq = cb.createQuery(Skripsi.class);
            Root<Skripsi> bok = cq.from(Skripsi.class);
            cq.select(bok);

            // Check if WHERE clause is not empty
            if (queryString.endsWith(" WHERE ")) {
                throw new IllegalArgumentException("No search criteria selected.");
            }
            
            TypedQuery<Skripsi> q = em.createQuery(cq);
            List<Skripsi> list = q.getResultList();
            Query query = em.createQuery(queryString);
            query.setParameter("searchTerm", "%" + searchTerm + "%");
            
            DefaultTableModel dataModel = new DefaultTableModel();
            SimpleDateFormat tgl = new SimpleDateFormat("dd-MM-yyyy");
            List<Skripsi> results = query.getResultList();
            Map<String, Object> parameter = new HashMap<>();
            parameter.put("querySearch", searchTerm);
            parameter.put("searchBy", selection);
            List<Object[]> data = new ArrayList<>();
            for (Skripsi result : results) {
                Object[] rowData = {
                    result.getId(),
                    result.getNama(),
                    result.getAngkatan(),
                    result.getIdSkripsi(),
                    result.getJudulSkripsi(),
                    result.getTahunTerbit(),
                    result.getJumlahHalaman(),
                    result.getTanggal()};
                data.add(rowData);
            }
            em.getTransaction().commit();
            em.close();
            emf.close();

            // Membuat sumber data untuk JasperReports dari data hasil pencarian
            JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(results);

            // Memuat file desain laporan (*.jrxml)
            JasperReport jasperReport = JasperCompileManager.compileReport(reportPath);
            JasperPrint print = JasperFillManager.fillReport(jasperReport, null, dataSource);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);
            
        } catch (JRException ex) {
            Logger.getLogger(pinjamBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printActionPerformed

    private void cSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSearch1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cSearch1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputSkripsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableModel;
    private javax.swing.JComboBox<String> cSearch1;
    private javax.swing.JButton delete;
    private javax.swing.JButton input;
    private javax.swing.JTextField isiAngkatan1;
    private javax.swing.JTextField isiID1;
    private javax.swing.JTextField isiIDSkripsi;
    private javax.swing.JTextField isiJudul1;
    private javax.swing.JTextField isiJumlah1;
    private javax.swing.JTextField isiNama1;
    private javax.swing.JTextField isiTahun1;
    private javax.swing.JTextField isiTgl1;
    private javax.swing.JButton jBuku;
    private javax.swing.JButton jHome;
    private javax.swing.JButton jKeluar;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jSearch;
    private javax.swing.JTextField jSearch1;
    private javax.swing.JButton jSkripsi;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelAtas;
    private javax.swing.JPanel panelAtas1;
    private javax.swing.JPanel panelKiri;
    private javax.swing.JPanel panelSkripsi;
    private javax.swing.JPanel panelTengah;
    private javax.swing.JButton peminjamanSkripsi;
    private javax.swing.JButton print;
    private javax.swing.JButton save;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
